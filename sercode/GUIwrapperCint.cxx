//
// File generated by rootcint at Wed Nov 28 10:49:38 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME GUIwrapperCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GUIwrapperCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::GUIwrapper GUIwrapper;
      #else
      class GUIwrapper  {
         public:
         //friend XX;
          int NCHANS; //
         int runin; //
         int runout; //
         vector< ::string > filelist; //
         float threshold; //
         vector< float > threshold_per_pmt; //
         int before_window; //
         int after_window; //
         int window; //
         int auxchannel; //
         int display_mode; //which mode to display ser, amplitude or length
         bool already_fitted; //
         ::MainFrame* fMainFrame; //
         ::AuxFrame* fAuxFrame; //
         ::process* analysis; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void AuxFrame_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_AuxFrame(void *p);
   static void deleteArray_AuxFrame(void *p);
   static void destruct_AuxFrame(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AuxFrame*)
   {
      ::AuxFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AuxFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AuxFrame", ::AuxFrame::Class_Version(), "./AuxFrame.h", 15,
                  typeid(::AuxFrame), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AuxFrame::Dictionary, isa_proxy, 4,
                  sizeof(::AuxFrame) );
      instance.SetDelete(&delete_AuxFrame);
      instance.SetDeleteArray(&deleteArray_AuxFrame);
      instance.SetDestructor(&destruct_AuxFrame);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AuxFrame*)
   {
      return GenerateInitInstanceLocal((::AuxFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AuxFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PMTwidget_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PMTwidget(void *p = 0);
   static void *newArray_PMTwidget(Long_t size, void *p);
   static void delete_PMTwidget(void *p);
   static void deleteArray_PMTwidget(void *p);
   static void destruct_PMTwidget(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PMTwidget*)
   {
      ::PMTwidget *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PMTwidget >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PMTwidget", ::PMTwidget::Class_Version(), "./PMTwidget.h", 28,
                  typeid(::PMTwidget), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PMTwidget::Dictionary, isa_proxy, 4,
                  sizeof(::PMTwidget) );
      instance.SetNew(&new_PMTwidget);
      instance.SetNewArray(&newArray_PMTwidget);
      instance.SetDelete(&delete_PMTwidget);
      instance.SetDeleteArray(&deleteArray_PMTwidget);
      instance.SetDestructor(&destruct_PMTwidget);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PMTwidget*)
   {
      return GenerateInitInstanceLocal((::PMTwidget*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PMTwidget*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MainFrame_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MainFrame(void *p);
   static void deleteArray_MainFrame(void *p);
   static void destruct_MainFrame(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MainFrame*)
   {
      ::MainFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MainFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MainFrame", ::MainFrame::Class_Version(), "./MainFrame.h", 18,
                  typeid(::MainFrame), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MainFrame::Dictionary, isa_proxy, 4,
                  sizeof(::MainFrame) );
      instance.SetDelete(&delete_MainFrame);
      instance.SetDeleteArray(&deleteArray_MainFrame);
      instance.SetDestructor(&destruct_MainFrame);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MainFrame*)
   {
      return GenerateInitInstanceLocal((::MainFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MainFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void GUIwrapper_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void GUIwrapper_Dictionary();
   static void delete_GUIwrapper(void *p);
   static void deleteArray_GUIwrapper(void *p);
   static void destruct_GUIwrapper(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GUIwrapper*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::GUIwrapper) == sizeof( ::ROOTShadow::Shadow::GUIwrapper));
      ::GUIwrapper *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::GUIwrapper),0);
      static ::ROOT::TGenericClassInfo 
         instance("GUIwrapper", "./GUIwrapper.h", 22,
                  typeid(::GUIwrapper), ::ROOT::DefineBehavior(ptr, ptr),
                  &GUIwrapper_ShowMembers, &GUIwrapper_Dictionary, isa_proxy, 4,
                  sizeof(::GUIwrapper) );
      instance.SetDelete(&delete_GUIwrapper);
      instance.SetDeleteArray(&deleteArray_GUIwrapper);
      instance.SetDestructor(&destruct_GUIwrapper);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GUIwrapper*)
   {
      return GenerateInitInstanceLocal((::GUIwrapper*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GUIwrapper*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void GUIwrapper_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::GUIwrapper*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr AuxFrame::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AuxFrame::Class_Name()
{
   return "AuxFrame";
}

//______________________________________________________________________________
const char *AuxFrame::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AuxFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AuxFrame::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AuxFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AuxFrame::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AuxFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AuxFrame::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AuxFrame*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PMTwidget::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PMTwidget::Class_Name()
{
   return "PMTwidget";
}

//______________________________________________________________________________
const char *PMTwidget::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PMTwidget*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMTwidget::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PMTwidget*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMTwidget::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PMTwidget*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMTwidget::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PMTwidget*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MainFrame::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MainFrame::Class_Name()
{
   return "MainFrame";
}

//______________________________________________________________________________
const char *MainFrame::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MainFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MainFrame::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MainFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MainFrame::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MainFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MainFrame::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MainFrame*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MainFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class MainFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MainFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(MainFrame::Class(),this);
   }
}

//______________________________________________________________________________
void MainFrame::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MainFrame.
      TClass *R__cl = ::MainFrame::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTab", &fTab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCompositeGroup[5]", &fCompositeGroup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAbortButton", &fAbortButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSaveDBButton", &fSaveDBButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBatchButton", &fBatchButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSaveFileButton", &fSaveFileButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fserButton", &fserButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fampButton", &fampButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*flengthButton", &flengthButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*displays[38]", &displays);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runin", &runin);
      TGMainFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MainFrame(void *p) {
      delete ((::MainFrame*)p);
   }
   static void deleteArray_MainFrame(void *p) {
      delete [] ((::MainFrame*)p);
   }
   static void destruct_MainFrame(void *p) {
      typedef ::MainFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MainFrame

//______________________________________________________________________________
namespace ROOTDict {
   void GUIwrapper_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class GUIwrapper.
      typedef ::ROOTShadow::Shadow::GUIwrapper ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::GUIwrapper*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NCHANS", &sobj->NCHANS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runin", &sobj->runin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runout", &sobj->runout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "filelist", (void*)&sobj->filelist);
      R__insp.InspectMember("vector<string>", (void*)&sobj->filelist, "filelist.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshold", &sobj->threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshold_per_pmt", (void*)&sobj->threshold_per_pmt);
      R__insp.InspectMember("vector<float>", (void*)&sobj->threshold_per_pmt, "threshold_per_pmt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "before_window", &sobj->before_window);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "after_window", &sobj->after_window);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "window", &sobj->window);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "auxchannel", &sobj->auxchannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "display_mode", &sobj->display_mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "already_fitted", &sobj->already_fitted);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMainFrame", &sobj->fMainFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAuxFrame", &sobj->fAuxFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*analysis", &sobj->analysis);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_GUIwrapper(void *p) {
      delete ((::GUIwrapper*)p);
   }
   static void deleteArray_GUIwrapper(void *p) {
      delete [] ((::GUIwrapper*)p);
   }
   static void destruct_GUIwrapper(void *p) {
      typedef ::GUIwrapper current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::GUIwrapper

//______________________________________________________________________________
void PMTwidget::Streamer(TBuffer &R__b)
{
   // Stream an object of class PMTwidget.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PMTwidget::Class(),this);
   } else {
      R__b.WriteClassBuffer(PMTwidget::Class(),this);
   }
}

//______________________________________________________________________________
void PMTwidget::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PMTwidget.
      TClass *R__cl = ::PMTwidget::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEmbeddedCanvas", &fEmbeddedCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*canvas", &canvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPMTLabel", &fPMTLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStatusLabel", &fStatusLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRefitTextButton", &fRefitTextButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fbatchButton", &fbatchButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel_status", &channel_status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel_number", &channel_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "batch_refit", &batch_refit);
      TGCompositeFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PMTwidget(void *p) {
      return  p ? new(p) ::PMTwidget : new ::PMTwidget;
   }
   static void *newArray_PMTwidget(Long_t nElements, void *p) {
      return p ? new(p) ::PMTwidget[nElements] : new ::PMTwidget[nElements];
   }
   // Wrapper around operator delete
   static void delete_PMTwidget(void *p) {
      delete ((::PMTwidget*)p);
   }
   static void deleteArray_PMTwidget(void *p) {
      delete [] ((::PMTwidget*)p);
   }
   static void destruct_PMTwidget(void *p) {
      typedef ::PMTwidget current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PMTwidget

//______________________________________________________________________________
void AuxFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class AuxFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AuxFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(AuxFrame::Class(),this);
   }
}

//______________________________________________________________________________
void AuxFrame::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AuxFrame.
      TClass *R__cl = ::AuxFrame::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEXP", &NEXP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NGAUSS", &NGAUSS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*vframeright", &vframeright);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEcanvasup", &fEcanvasup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEcanvasd", &fEcanvasd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*draw", &draw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*done", &done);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGauss", &fGauss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*change", &change);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHigh[12]", &fHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLow[12]", &fLow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVal[12]", &fVal);
      TGMainFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_AuxFrame(void *p) {
      delete ((::AuxFrame*)p);
   }
   static void deleteArray_AuxFrame(void *p) {
      delete [] ((::AuxFrame*)p);
   }
   static void destruct_AuxFrame(void *p) {
      typedef ::AuxFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AuxFrame

namespace ROOTDict {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<float>

namespace ROOTDict {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<string>

/********************************************************
* GUIwrapperCint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGUIwrapperCint();

extern "C" void G__set_cpp_environmentGUIwrapperCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("GUIwrapper.h");
  G__cpp_reset_tagtableGUIwrapperCint();
}
#include <new>
extern "C" int G__cpp_dllrevGUIwrapperCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* AuxFrame */
static int G__GUIwrapperCint_394_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AuxFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AuxFrame(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) AuxFrame(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GUIwrapperCintLN_AuxFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((AuxFrame*) G__getstructoffset())->draw_histo_in_pads((TH1F*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((AuxFrame*) G__getstructoffset())->draw_histo_in_pads((TH1F*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AuxFrame*) G__getstructoffset())->get_refit_button());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AuxFrame*) G__getstructoffset())->get_done_button());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AuxFrame*) G__getstructoffset())->get_change_button());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AuxFrame*) G__getstructoffset())->set_params_in_frame((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AuxFrame*) G__getstructoffset())->get_params_from_frame((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((AuxFrame*) G__getstructoffset())->get_gauss_number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((AuxFrame*) G__getstructoffset())->redraw_frame_with_gauss((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AuxFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AuxFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AuxFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AuxFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AuxFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AuxFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AuxFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AuxFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_394_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AuxFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AuxFrame G__TAuxFrame;
static int G__GUIwrapperCint_394_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AuxFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AuxFrame*) (soff+(sizeof(AuxFrame)*i)))->~G__TAuxFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AuxFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AuxFrame*) (soff))->~G__TAuxFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PMTwidget */
static int G__GUIwrapperCint_395_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMTwidget* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMTwidget(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Pixel_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) PMTwidget(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Pixel_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMTwidget(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) PMTwidget(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMTwidget(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) PMTwidget(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMTwidget((TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) PMTwidget((TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMTwidget((TGWindow*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) PMTwidget((TGWindow*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new PMTwidget[n];
       } else {
         p = new((void*) gvp) PMTwidget[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new PMTwidget;
       } else {
         p = new((void*) gvp) PMTwidget;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GUIwrapperCintLN_PMTwidget));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMTwidget*) G__getstructoffset())->set_channel_status((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTwidget*) G__getstructoffset())->get_channel_status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMTwidget*) G__getstructoffset())->set_channel_number((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTwidget*) G__getstructoffset())->get_channel_number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMTwidget*) G__getstructoffset())->toggle_batch_refit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((PMTwidget*) G__getstructoffset())->get_batch_refit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PMTwidget*) G__getstructoffset())->get_refit_button());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PMTwidget*) G__getstructoffset())->get_check_button());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((PMTwidget*) G__getstructoffset())->get_canvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PMTwidget::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMTwidget::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PMTwidget::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PMTwidget::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMTwidget*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMTwidget::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMTwidget::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMTwidget::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_395_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMTwidget::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PMTwidget G__TPMTwidget;
static int G__GUIwrapperCint_395_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PMTwidget*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PMTwidget*) (soff+(sizeof(PMTwidget)*i)))->~G__TPMTwidget();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PMTwidget*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PMTwidget*) (soff))->~G__TPMTwidget();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MainFrame */
static int G__GUIwrapperCint_396_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MainFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MainFrame(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) MainFrame(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GUIwrapperCintLN_MainFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MainFrame*) G__getstructoffset())->draw_histo_in_pad((TH1F*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MainFrame*) G__getstructoffset())->set_all_status((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MainFrame*) G__getstructoffset())->get_display_widget((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MainFrame*) G__getstructoffset())->GetOffWindows((int*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MainFrame*) G__getstructoffset())->get_abort_button());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MainFrame*) G__getstructoffset())->get_saveDB_button());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MainFrame*) G__getstructoffset())->get_savefile_button());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MainFrame*) G__getstructoffset())->get_batch_button());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MainFrame*) G__getstructoffset())->get_ser_button());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MainFrame*) G__getstructoffset())->get_amp_button());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MainFrame*) G__getstructoffset())->get_length_button());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MainFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MainFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MainFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MainFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MainFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MainFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MainFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MainFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_396_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MainFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MainFrame G__TMainFrame;
static int G__GUIwrapperCint_396_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MainFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MainFrame*) (soff+(sizeof(MainFrame)*i)))->~G__TMainFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MainFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MainFrame*) (soff))->~G__TMainFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GUIwrapper */
static int G__GUIwrapperCint_652_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GUIwrapper* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GUIwrapper(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *((vector<string>*) G__int(libp->para[2])), *((map<string,double>*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) GUIwrapper(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *((vector<string>*) G__int(libp->para[2])), *((map<string,double>*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GUIwrapperCintLN_GUIwrapper));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_652_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GUIwrapper*) G__getstructoffset())->OpenAux((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_652_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GUIwrapper*) G__getstructoffset())->CloseWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_652_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GUIwrapper*) G__getstructoffset())->SaveDB();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_652_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GUIwrapper*) G__getstructoffset())->SaveFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_652_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GUIwrapper*) G__getstructoffset())->BatchFit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_652_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GUIwrapper*) G__getstructoffset())->CloseAuxWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_652_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GUIwrapper*) G__getstructoffset())->FitFromAuxWindow((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_652_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GUIwrapper*) G__getstructoffset())->ChangeDisplay((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_652_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GUIwrapper*) G__getstructoffset())->ChangeNGaussInAuxWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GUIwrapperCint_652_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GUIwrapper*) G__getstructoffset())->initialize_data();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GUIwrapperCint_652_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GUIwrapper* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GUIwrapper(*(GUIwrapper*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GUIwrapperCintLN_GUIwrapper));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GUIwrapper G__TGUIwrapper;
static int G__GUIwrapperCint_652_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GUIwrapper*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GUIwrapper*) (soff+(sizeof(GUIwrapper)*i)))->~G__TGUIwrapper();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GUIwrapper*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GUIwrapper*) (soff))->~G__TGUIwrapper();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* AuxFrame */

/* PMTwidget */

/* MainFrame */

/* GUIwrapper */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGUIwrapperCint {
 public:
  G__Sizep2memfuncGUIwrapperCint(): p(&G__Sizep2memfuncGUIwrapperCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGUIwrapperCint::*p)();
};

size_t G__get_sizep2memfuncGUIwrapperCint()
{
  G__Sizep2memfuncGUIwrapperCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGUIwrapperCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GUIwrapperCintLN_AuxFrame))) {
     AuxFrame *G__Lderived;
     G__Lderived=(AuxFrame*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_AuxFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_AuxFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_AuxFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_AuxFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_AuxFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_AuxFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_AuxFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GUIwrapperCintLN_PMTwidget))) {
     PMTwidget *G__Lderived;
     G__Lderived=(PMTwidget*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_PMTwidget),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_PMTwidget),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_PMTwidget),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_PMTwidget),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_PMTwidget),G__get_linked_tagnum(&G__GUIwrapperCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_PMTwidget),G__get_linked_tagnum(&G__GUIwrapperCintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GUIwrapperCintLN_MainFrame))) {
     MainFrame *G__Lderived;
     G__Lderived=(MainFrame*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_MainFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_MainFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_MainFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_MainFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_MainFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_MainFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_MainFrame),G__get_linked_tagnum(&G__GUIwrapperCintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGUIwrapperCint() {

   /* Setting up typedef entry */
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Pixel_t",107,-1,0,-1);
   G__setnewtype(-1,"Pixel value",0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,double>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,double>",117,G__get_linked_tagnum(&G__GUIwrapperCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* AuxFrame */
static void G__setup_memvarAuxFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_AuxFrame));
   { AuxFrame *p; p=(AuxFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NEXP=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NGAUSS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGVerticalFrame),-1,-1,4,"vframeright=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TRootEmbeddedCanvas),-1,-1,4,"fEcanvasup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TRootEmbeddedCanvas),-1,-1,4,"fEcanvasd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton),-1,-1,4,"draw=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton),-1,-1,4,"done=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGNumberEntryField),-1,-1,4,"fGauss=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton),-1,-1,4,"change=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGNumberEntryField),-1,-1,4,"fHigh[12]=",0,"baseline, 2 exponentials, xo, sigma, 5 gaussian peaks.  ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGNumberEntryField),-1,-1,4,"fLow[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGNumberEntryField),-1,-1,4,"fVal[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PMTwidget */
static void G__setup_memvarPMTwidget(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_PMTwidget));
   { PMTwidget *p; p=(PMTwidget*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TRootEmbeddedCanvas),-1,-1,4,"fEmbeddedCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TCanvas),-1,-1,4,"canvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGLabel),-1,-1,4,"fPMTLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGLabel),-1,-1,4,"fStatusLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton),-1,-1,4,"fRefitTextButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGCheckButton),-1,-1,4,"fbatchButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"channel_status=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"channel_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"batch_refit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MainFrame */
static void G__setup_memvarMainFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_MainFrame));
   { MainFrame *p; p=(MainFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTab),-1,-1,4,"fTab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGCompositeFrame),-1,-1,4,"fCompositeGroup[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton),-1,-1,4,"fAbortButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton),-1,-1,4,"fSaveDBButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton),-1,-1,4,"fBatchButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton),-1,-1,4,"fSaveFileButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton),-1,-1,4,"fserButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton),-1,-1,4,"fampButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton),-1,-1,4,"flengthButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_PMTwidget),-1,-1,4,"displays[38]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"runin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GUIwrapper */
static void G__setup_memvarGUIwrapper(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_GUIwrapper));
   { GUIwrapper *p; p=(GUIwrapper*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,1,-1,-1,-1,4,"NCHANS=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"runin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"runout=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,4,"filelist=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"threshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"threshold_per_pmt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"before_window=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"after_window=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"window=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"auxchannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"display_mode=",0,"which mode to display ser, amplitude or length");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"already_fitted=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_MainFrame),-1,-1,4,"fMainFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_AuxFrame),-1,-1,4,"fAuxFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GUIwrapperCintLN_process),-1,-1,4,"analysis=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGUIwrapperCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncAuxFrame(void) {
   /* AuxFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_AuxFrame));
   G__memfunc_setup("AuxFrame",793,G__GUIwrapperCint_394_0_1, 105, G__get_linked_tagnum(&G__GUIwrapperCintLN_AuxFrame), -1, 0, 6, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h h - 'UInt_t' 0 - options "
"i - - 0 - nexp i - - 0 - ngaus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("draw_histo_in_pads",1905,G__GUIwrapperCint_394_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH1F' - 0 - histo i - - 0 - pad "
"i - - 0 '0' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_refit_button",1716,G__GUIwrapperCint_394_0_3, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_done_button",1600,G__GUIwrapperCint_394_0_4, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_change_button",1792,G__GUIwrapperCint_394_0_5, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_params_in_frame",1999,G__GUIwrapperCint_394_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"D - - 0 - pval D - - 0 - plow "
"D - - 0 - phigh i - - 0 - ngaus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_params_from_frame",2208,G__GUIwrapperCint_394_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"D - - 0 - pval D - - 0 - plow "
"D - - 0 - phigh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_gauss_number",1706,G__GUIwrapperCint_394_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("redraw_frame_with_gauss",2444,G__GUIwrapperCint_394_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ngauss", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupRightAuxiliaryFrame",2482,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TGVerticalFrame' - 0 - vframeright", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Expand",608,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'TGCompositeFrame' - 0 - f3 u 'TString' - 0 - label "
"i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("draw_extra_func_in_pads",2425,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TH1F' - 0 - histo i - - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GUIwrapperCint_394_0_13, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AuxFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GUIwrapperCint_394_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AuxFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GUIwrapperCint_394_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AuxFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GUIwrapperCint_394_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AuxFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GUIwrapperCint_394_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GUIwrapperCint_394_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AuxFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GUIwrapperCint_394_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AuxFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GUIwrapperCint_394_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AuxFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GUIwrapperCint_394_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AuxFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AuxFrame", 919, G__GUIwrapperCint_394_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPMTwidget(void) {
   /* PMTwidget */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_PMTwidget));
   G__memfunc_setup("PMTwidget",885,G__GUIwrapperCint_395_0_1, 105, G__get_linked_tagnum(&G__GUIwrapperCintLN_PMTwidget), -1, 0, 5, 1, 1, 0, 
"U 'TGWindow' - 10 '0' p h - 'UInt_t' 0 '1' w "
"h - 'UInt_t' 0 '1' h h - 'UInt_t' 0 '0' options "
"k - 'Pixel_t' 0 'GetDefaultFrameBackground()' back", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_channel_status",1927,G__GUIwrapperCint_395_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_channel_status",1915,G__GUIwrapperCint_395_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_channel_number",1900,G__GUIwrapperCint_395_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_channel_number",1888,G__GUIwrapperCint_395_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("toggle_batch_refit",1884,G__GUIwrapperCint_395_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_batch_refit",1562,G__GUIwrapperCint_395_0_7, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_refit_button",1716,G__GUIwrapperCint_395_0_8, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_check_button",1688,G__GUIwrapperCint_395_0_9, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TGCheckButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_canvas",1051,G__GUIwrapperCint_395_0_10, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GUIwrapperCint_395_0_11, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PMTwidget::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GUIwrapperCint_395_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMTwidget::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GUIwrapperCint_395_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PMTwidget::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GUIwrapperCint_395_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PMTwidget::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GUIwrapperCint_395_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GUIwrapperCint_395_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMTwidget::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GUIwrapperCint_395_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PMTwidget::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GUIwrapperCint_395_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMTwidget::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GUIwrapperCint_395_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PMTwidget::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~PMTwidget", 1011, G__GUIwrapperCint_395_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMainFrame(void) {
   /* MainFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_MainFrame));
   G__memfunc_setup("MainFrame",880,G__GUIwrapperCint_396_0_1, 105, G__get_linked_tagnum(&G__GUIwrapperCintLN_MainFrame), -1, 0, 5, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h h - 'UInt_t' 0 - options "
"i - - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("draw_histo_in_pad",1790,G__GUIwrapperCint_396_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1F' - 0 - histo i - - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_all_status",1511,G__GUIwrapperCint_396_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_display_widget",1912,G__GUIwrapperCint_396_0_4, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_PMTwidget), -1, 0, 1, 1, 1, 0, "i - - 0 - number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOffWindows",1318,G__GUIwrapperCint_396_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"I - - 0 - onoff i - - 0 - nchans", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_abort_button",1714,G__GUIwrapperCint_396_0_6, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_saveDB_button",1743,G__GUIwrapperCint_396_0_7, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_savefile_button",2025,G__GUIwrapperCint_396_0_8, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_batch_button",1692,G__GUIwrapperCint_396_0_9, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ser_button",1508,G__GUIwrapperCint_396_0_10, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_amp_button",1496,G__GUIwrapperCint_396_0_11, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_length_button",1820,G__GUIwrapperCint_396_0_12, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TGTextButton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GUIwrapperCint_396_0_13, 85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MainFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GUIwrapperCint_396_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MainFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GUIwrapperCint_396_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MainFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GUIwrapperCint_396_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MainFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GUIwrapperCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GUIwrapperCint_396_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GUIwrapperCint_396_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MainFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GUIwrapperCint_396_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MainFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GUIwrapperCint_396_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MainFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GUIwrapperCint_396_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MainFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MainFrame", 1006, G__GUIwrapperCint_396_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGUIwrapper(void) {
   /* GUIwrapper */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GUIwrapperCintLN_GUIwrapper));
   G__memfunc_setup("GUIwrapper",998,G__GUIwrapperCint_652_0_1, 105, G__get_linked_tagnum(&G__GUIwrapperCintLN_GUIwrapper), -1, 0, 4, 1, 1, 0, 
"i - - 0 - nchans i - - 0 - in "
"u 'vector<string,allocator<string> >' 'vector<string>' 0 - files u 'map<string,double,less<string>,allocator<pair<const string,double> > >' 'map<string,double>' 0 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenAux",704,G__GUIwrapperCint_652_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nchan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,G__GUIwrapperCint_652_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveDB",533,G__GUIwrapperCint_652_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveFile",783,G__GUIwrapperCint_652_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BatchFit",773,G__GUIwrapperCint_652_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseAuxWindow",1436,G__GUIwrapperCint_652_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitFromAuxWindow",1629,G__GUIwrapperCint_652_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - chan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangeDisplay",1308,G__GUIwrapperCint_652_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangeNGaussInAuxWindow",2292,G__GUIwrapperCint_652_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize_data",1579,G__GUIwrapperCint_652_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("draw_data",935,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("GUIwrapper", 998, G__GUIwrapperCint_652_0_13, (int) ('i'), G__get_linked_tagnum(&G__GUIwrapperCintLN_GUIwrapper), -1, 0, 1, 1, 1, 0, "u 'GUIwrapper' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GUIwrapper", 1124, G__GUIwrapperCint_652_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGUIwrapperCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGUIwrapperCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGUIwrapperCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GUIwrapperCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TGTab = { "TGTab" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TRootEmbeddedCanvas = { "TRootEmbeddedCanvas" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TGLabel = { "TGLabel" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_TGNumberEntryField = { "TGNumberEntryField" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_AuxFrame = { "AuxFrame" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_PMTwidget = { "PMTwidget" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_MainFrame = { "MainFrame" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR = { "map<string,double,less<string>,allocator<pair<const string,double> > >" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_process = { "process" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GUIwrapperCintLN_GUIwrapper = { "GUIwrapper" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGUIwrapperCint() {
  G__GUIwrapperCintLN_TClass.tagnum = -1 ;
  G__GUIwrapperCintLN_TBuffer.tagnum = -1 ;
  G__GUIwrapperCintLN_TMemberInspector.tagnum = -1 ;
  G__GUIwrapperCintLN_TObject.tagnum = -1 ;
  G__GUIwrapperCintLN_TString.tagnum = -1 ;
  G__GUIwrapperCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__GUIwrapperCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GUIwrapperCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GUIwrapperCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__GUIwrapperCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GUIwrapperCintLN_TGObject.tagnum = -1 ;
  G__GUIwrapperCintLN_TQObject.tagnum = -1 ;
  G__GUIwrapperCintLN_TGWindow.tagnum = -1 ;
  G__GUIwrapperCintLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__GUIwrapperCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__GUIwrapperCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GUIwrapperCintLN_TGFrame.tagnum = -1 ;
  G__GUIwrapperCintLN_TGCompositeFrame.tagnum = -1 ;
  G__GUIwrapperCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__GUIwrapperCintLN_TGTextButton.tagnum = -1 ;
  G__GUIwrapperCintLN_TGVerticalFrame.tagnum = -1 ;
  G__GUIwrapperCintLN_TGMainFrame.tagnum = -1 ;
  G__GUIwrapperCintLN_TGTab.tagnum = -1 ;
  G__GUIwrapperCintLN_TGCheckButton.tagnum = -1 ;
  G__GUIwrapperCintLN_TCanvas.tagnum = -1 ;
  G__GUIwrapperCintLN_TRootEmbeddedCanvas.tagnum = -1 ;
  G__GUIwrapperCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__GUIwrapperCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__GUIwrapperCintLN_TH1F.tagnum = -1 ;
  G__GUIwrapperCintLN_TGLabel.tagnum = -1 ;
  G__GUIwrapperCintLN_TGNumberEntryField.tagnum = -1 ;
  G__GUIwrapperCintLN_AuxFrame.tagnum = -1 ;
  G__GUIwrapperCintLN_PMTwidget.tagnum = -1 ;
  G__GUIwrapperCintLN_MainFrame.tagnum = -1 ;
  G__GUIwrapperCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__GUIwrapperCintLN_process.tagnum = -1 ;
  G__GUIwrapperCintLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__GUIwrapperCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GUIwrapperCintLN_GUIwrapper.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGUIwrapperCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TString);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TGObject);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TQObject);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TGVerticalFrame);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TGTab);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TGCheckButton);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TRootEmbeddedCanvas);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TGLabel);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_TGNumberEntryField);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_AuxFrame),sizeof(AuxFrame),-1,324608,(char*)NULL,G__setup_memvarAuxFrame,G__setup_memfuncAuxFrame);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_PMTwidget),sizeof(PMTwidget),-1,324864,(char*)NULL,G__setup_memvarPMTwidget,G__setup_memfuncPMTwidget);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_MainFrame),sizeof(MainFrame),-1,324608,(char*)NULL,G__setup_memvarMainFrame,G__setup_memfuncMainFrame);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_process);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GUIwrapperCintLN_GUIwrapper),sizeof(GUIwrapper),-1,295936,(char*)NULL,G__setup_memvarGUIwrapper,G__setup_memfuncGUIwrapper);
}
extern "C" void G__cpp_setupGUIwrapperCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupGUIwrapperCint()");
  G__set_cpp_environmentGUIwrapperCint();
  G__cpp_setup_tagtableGUIwrapperCint();

  G__cpp_setup_inheritanceGUIwrapperCint();

  G__cpp_setup_typetableGUIwrapperCint();

  G__cpp_setup_memvarGUIwrapperCint();

  G__cpp_setup_memfuncGUIwrapperCint();
  G__cpp_setup_globalGUIwrapperCint();
  G__cpp_setup_funcGUIwrapperCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGUIwrapperCint();
  return;
}
class G__cpp_setup_initGUIwrapperCint {
  public:
    G__cpp_setup_initGUIwrapperCint() { G__add_setup_func("GUIwrapperCint",(G__incsetup)(&G__cpp_setupGUIwrapperCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGUIwrapperCint() { G__remove_setup_func("GUIwrapperCint"); }
};
G__cpp_setup_initGUIwrapperCint G__cpp_setup_initializerGUIwrapperCint;

